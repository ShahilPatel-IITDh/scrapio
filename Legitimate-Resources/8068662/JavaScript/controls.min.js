function ApplicantIDControl(n,t){this.IDPrefix=n;this.ValidationGroup=this.IDPrefix+"ValidateApplicantID";this.options=$.extend({},{DefaultToDL:!1},t);this._initialization();this._registerValidators();this._refreshVisibility();this._hideControlIfNoIDs();this.options.DefaultToDL===!0&&this.$ddlIDCardType.find("option[value='DRIVERS_LICENSE']").length>0&&this.$ddlIDCardType.val("DRIVERS_LICENSE").selectmenu().selectmenu("refresh").trigger("change");var i=this.$ddlIDCardType.attr("data-sso-id-cardtype"),r=this.$ddlIDState.attr("data-sso-id-state"),u=this.$ddlIDCountry.attr("data-sso-id-country");i!=undefined&&$.trim(i)!=""&&this.$ddlIDCardType.find("option[value='"+i+"']").length>0&&this.$ddlIDCardType.val(i).selectmenu().selectmenu("refresh").trigger("change");r!=undefined&&$.trim(r)!=""&&this.$ddlIDState.find("option[value='"+r+"']").length>0&&this.$ddlIDState.val(r).selectmenu().selectmenu("refresh").trigger("change");u!=undefined&&$.trim(u)!=""&&this.$ddlIDCountry.find("option[value='"+u+"']").length>0&&this.$ddlIDCountry.val(u).selectmenu().selectmenu("refresh").trigger("change")}function DateInput(n){this.id=n;this._initialization()}ApplicantIDControl.prototype._initialization=function(){this.$ddlIDCardType=$("#"+this.IDPrefix+"ddlIDCardType");this.$cntIDCardType=this.$ddlIDCardType.closest("div[data-role='fieldcontain']");this.$lblIDCardType=this.$cntIDCardType.children("label[for]").first();this.$txtIDCardNumber=$("#"+this.IDPrefix+"txtIDCardNumber");this.$cntIDCardNumber=this.$txtIDCardNumber.closest("div[data-role='fieldcontain']");this.$lblIDCardNumber=this.$cntIDCardNumber.children("label[for]").first();this.$ddlIDState=$("#"+this.IDPrefix+"ddlIDState");this.$cntIDState=this.$ddlIDState.closest("div[data-role='fieldcontain']");this.$lblIDState=this.$cntIDState.children("label[for]").first();this.$ddlIDCountry=$("#"+this.IDPrefix+"ddlIDCountry");this.$cntIDCountry=this.$ddlIDCountry.closest("div[data-role='fieldcontain']");this.$lblIDCountry=this.$cntIDCountry.children("label[for]").first();this.IDDateIssuedInput=new DateInput(this.IDPrefix+"txtIDDateIssued");this.IDDateExpireInput=new DateInput(this.IDPrefix+"txtIDDateExpire");this.$cntApplicantID=$("#"+this.IDPrefix+"divApplicantIDContainer");this.IDCardTypes=window[this.IDPrefix+"ConfiguredIDCardTypes"]||[];this.$ddlIDCardType.empty().append(Common.CreateEmptySelectOption()).append(this.IDCardTypes.map(function(n){return $("<option/>",{value:n.IDCardValue,text:n.IDCardName})}));this.$ddlIDCardType.selectmenu().selectmenu("refresh");this.$ddlIDState.empty().append(Common.CreateEmptySelectOption()).append(STATES_LIST.map(function(n){return $("<option/>",{value:n.Key,text:n.Value})}));this.$ddlIDState.selectmenu().selectmenu("refresh");this.$ddlIDCountry.empty().append(Common.CreateEmptySelectOption()).append(COUNTRIES_LIST.map(function(n){return $("<option/>",{value:n.Key,text:n.Value})}));this.$ddlIDCountry.children("option[value='USA']").attr("selected",!0);this.$ddlIDCountry.selectmenu().selectmenu("refresh");this.$ddlIDCardType.on("change",function(){this._isMatriculaConsularID()&&this.$ddlIDCountry.val("MEXICO").selectmenu().selectmenu("refresh");this._refreshVisibility()}.bind(this))};ApplicantIDControl.prototype._isMatriculaConsularID=function(){const n=this.$ddlIDCardType.val(),t=this.$ddlIDCardType.children("option:selected").text();return n==null||n==""||t==null||t==""?!1:n.toUpperCase()=="MATR_CONS_ID"||t.toUpperCase().indexOf("MATRICULA CONSULAR ID")>-1};ApplicantIDControl.prototype._hideControlIfNoIDs=function(){(this.IDCardTypes==null||this.IDCardTypes.length==0||this.$ddlIDCardType.length==0)&&this.$cntApplicantID.addClass("hidden")};ApplicantIDControl.prototype._refreshVisibility=function(){var n=this.GetIDCardType(),t;n==null&&(n={IsCardNumberVisible:!1,IsCountryVisible:!1,IsStateVisible:!1,IsDateIssuedVisible:!1,IsDateExpireVisible:!1});t=$("#hdIsExpireDateValidation").val()=="true";this.$txtIDCardNumber.IsHideField()||this.$cntIDCardNumber.toggle(n.IsCardNumberVisible);this.$lblIDCardNumber.toggleClass("RequiredIcon",n.IsCardNumberRequired);this.$ddlIDState.IsHideField()||this.$cntIDState.toggle(n.IsStateVisible);this.$lblIDState.toggleClass("RequiredIcon",n.IsStateRequired);this.$ddlIDCountry.IsHideField()||this.$cntIDCountry.toggle(n.IsCountryVisible);this.$lblIDCountry.toggleClass("RequiredIcon",n.IsCountryRequired);this.IDDateIssuedInput.$txtDate1.IsHideField()||this.IDDateIssuedInput.$cntDate.toggle(n.IsDateIssuedVisible);this.IDDateIssuedInput.$lblDate.toggleClass("RequiredIcon",n.IsDateIssuedRequired);this.IDDateExpireInput.$txtDate1.IsHideField()||this.IDDateExpireInput.$cntDate.toggle(n.IsDateExpireVisible);t||this.IDDateExpireInput.$lblDate.toggleClass("RequiredIcon",n.IsDateExpireRequired)};ApplicantIDControl.prototype.GetIDCardType=function(){const n=this.$ddlIDCardType.val();return _.head(this.IDCardTypes.filter(function(t){return t.IDCardValue==n}))};ApplicantIDControl.prototype.AutoFillData=function(){if(this.$ddlIDCardType.val("DRIVERS_LICENSE"),this.$ddlIDCardType.val()==undefined||this.$ddlIDCardType.val()==null){const n=this.$ddlIDCardType.children()[1];n!=null&&this.$ddlIDCardType.val(n.value)}this.$ddlIDCardType.selectmenu().selectmenu("refresh");var n="4446464664",t="CA";getParaByName("IsTestCSC")=="Y"&&(n="509620517",t="KS");this.$txtIDCardNumber.val(n);this.$ddlIDState.val(t);this.$ddlIDState.selectmenu().selectmenu("refresh");this.$ddlIDCountry.val("USA");this.$ddlIDCountry.selectmenu().selectmenu("refresh");this.IDDateIssuedInput.SetDateValue("04/04/2002");this.IDDateExpireInput.SetDateValue("04/04/2029");this._refreshVisibility()};ApplicantIDControl.prototype.ValidateApplicantID=function(){return this.$cntApplicantID.hasClass("hidden")?!0:$.lpqValidate(this.ValidationGroup)};ApplicantIDControl.prototype._registerValidators=function(){const n=this;this.$ddlIDCardType.observer({validators:[function(){if(!n.$cntIDCardType.is(":visible")||n.$cntIDCardType.closest("div.validation-section").hasClass("abort-require"))return"";const t=n.GetIDCardType();return t==null||t==""?"This field is required":""}],validateOnBlur:!0,group:this.ValidationGroup});this.$txtIDCardNumber.observer({validators:[function(){if(!n.$cntIDCardNumber.is(":visible"))return"";const t=n.GetIDCardType();return t==null?"":t.IsCardNumberRequired&&Common.ValidateText(n.$txtIDCardNumber.val())==!1?"This field is required":""}],validateOnBlur:!0,group:this.ValidationGroup});this.$ddlIDState.observer({validators:[function(){if(!n.$cntIDState.is(":visible"))return"";const t=n.GetIDCardType();return t==null?"":t.IsStateRequired&&Common.ValidateText(n.$ddlIDState.val())==!1?"This field is required":""}],validateOnBlur:!0,group:this.ValidationGroup});this.$ddlIDCountry.observer({validators:[function(){if(!n.$cntIDCountry.is(":visible"))return"";const t=n.GetIDCardType();return t==null?"":t.IsCountryRequired&&Common.ValidateText(n.$ddlIDCountry.val())==!1?"This field is required":""}],validateOnBlur:!0,group:this.ValidationGroup});this.IDDateIssuedInput.$cntDateFields.observer({validators:[function(){if(!n.IDDateIssuedInput.$cntDate.is(":visible"))return"";const t=n.GetIDCardType();return t==null?"":n.IDDateIssuedInput.ValidateDate({isRequired:t.IsDateIssuedRequired,comparedToToday:"before",beforeDate:n.IDDateExpireInput.GetDateString(),beforeDateDescription:"the ID Expiration Date"})}],validateOnBlur:!0,group:this.ValidationGroup});this.IDDateExpireInput.$cntDateFields.observer({validators:[function(){if(!n.IDDateExpireInput.$cntDate.is(":visible"))return"";const t=n.GetIDCardType();return t==null?"":n._validateIdExpireDate({isRequired:t.IsDateExpireRequired,comparedToToday:"after",afterDate:n.IDDateIssuedInput.GetDateString(),afterDateDescription:"the ID Date Issued"})}],validateOnBlur:!0,group:this.ValidationGroup})};ApplicantIDControl.prototype._validateIdExpireDate=function(n){var r,i,o,u,s;n={isRequired:n.isRequired||!1,upperBoundYears:n.upperBoundYears||100,lowerBoundYears:n.lowerBoundYears||100,comparedToToday:n.comparedToToday||"any",afterDate:n.afterDate||"",afterDateDescription:n.afterDateDescription||"",beforeDate:n.beforeDate||"",beforeDateDescription:n.beforeDateDescription||""};const f=this.IDDateExpireInput.GetDateString(),e=Common.ValidateText(f),t=this.IDDateExpireInput.GetDateMoment();if(r=$("#hdIsExpireDateValidation").val()=="true",n.isRequired&&!e&&!r)return"This date is required";if(e){if(!Common.IsValidDate(f))return"This date is invalid";if(i=moment(),o=moment().subtract(1,"days"),n.lowerBoundYears>0&&t.year()<i.year()-n.lowerBoundYears)return"This date is too old";if(n.upperBoundYears>0&&t.year()>i.year()+n.upperBoundYears)return"This date is too far in the future";if(n.comparedToToday=="after"&&t.isBefore(o)){if(u=moment($("#hdIdExpirationValidationDate").val()),s=u.year()=="0001",!r)return"This date can not be before "+i.format("MM/DD/YYYY");if(r&&!s&&!t.isSameOrAfter(u))return"This date can not be before "+u.format("MM/DD/YYYY")}if(n.comparedToToday=="before"&&t.isAfter(i))return"This date must be equal to or less than current date";if(Common.ValidateText(n.afterDate)&&Common.IsValidDate(n.afterDate)&&t.isBefore(moment(n.afterDate,"MM-DD-YYYY")))return"This date must come after "+n.afterDateDescription;if(Common.ValidateText(n.beforeDate)&&Common.IsValidDate(n.beforeDate)&&!t.isBefore(moment(n.beforeDate,"MM-DD-YYYY")))return"This date must come before "+n.beforeDateDescription}};ApplicantIDControl.prototype.SetApplicantID=function(n){if(this.$cntApplicantID.hasClass("hidden"))return"";const t=this.GetIDCardType(),i=function(t,i){n[this.IDPrefix+t]=i}.bind(this);(i("IDCardType",this.$ddlIDCardType.val()),t!=null)&&(t.IsCardNumberVisible&&i("IDCardNumber",this.$txtIDCardNumber.val()),t.IsStateVisible&&i("IDState",this.$ddlIDState.val()),t.IsCountryVisible&&i("IDCountry",this.$ddlIDCountry.val()),t.IsDateIssuedVisible&&i("IDDateIssued",this.IDDateIssuedInput.$txtDate.val()),t.IsDateExpireVisible&&i("IDDateExpire",this.IDDateExpireInput.$txtDate.val()))};ApplicantIDControl.prototype.ViewApplicantID=function(n){if(this.$cntApplicantID.hasClass("hidden"))return n.hide(),n.prev("div.row").hide(),"";n.show();n.prev("div.row").show();const s=this.$ddlIDCardType.val(),f=this.$txtIDCardNumber.val(),h=this.$ddlIDState.val(),c=this.$ddlIDCountry.val(),e=this.IDDateIssuedInput.$txtDate.val(),o=this.IDDateExpireInput.$txtDate.val();var u="";const t=function(n,t){const i=$("<div/>",{"class":"col-sm-6 col-xs-12"}).append($("<div />",{"class":"row"}).append($("<div/>",{"class":"col-xs-6 text-right row-title"}).append($("<span/>",{"class":"bold",text:n})),$("<div/>",{"class":"col-xs-6 text-left row-data"}).append($("<span />",{text:t}))));u+=$("<div/>").append(i).html()},i=function(n){return n!=null&&n!=""};if(i(s)){const n=this.$ddlIDCardType.find("option:selected").text();t("ID Type",n)}else return t("ID Type","Not selected"),u;const r=this.GetIDCardType();if(r.IsCardNumberVisible&&i(f)&&t("ID Number",f),r.IsStateVisible&&i(h)){const n=this.$ddlIDState.find("option:selected").text();t("ID State",n)}if(r.IsCountryVisible&&i(c)){const n=this.$ddlIDCountry.find("option:selected").text();t("ID Country",n)}return r.IsDateIssuedVisible&&i(e)&&t("ID Date Issued",e),r.IsDateExpireVisible&&i(o)&&t("ID Expiration Date",o),u};DateInput.prototype._initialization=function(){this.$txtDate=$("#"+this.id);this.$cntDate=this.$txtDate.closest("div[data-role='fieldcontain']");this.$lblDate=this.$cntDate.find("label[for]").first();this.$cntDateFields=this.$cntDate.find(".ui-input-date");this.$txtDate1=$("#"+this.id+"1");this.$txtDate2=$("#"+this.id+"2");this.$txtDate3=$("#"+this.id+"3");this.$txtDate1.on("change",function(){this._updateFromUserInput()}.bind(this));this.$txtDate2.on("change",function(){this._updateFromUserInput()}.bind(this));this.$txtDate3.on("change",function(){this._updateFromUserInput()}.bind(this))};DateInput.prototype._updateFromUserInput=function(){const n=padLeft(this.$txtDate1.val(),2),t=padLeft(this.$txtDate2.val(),2),i=padLeft(this.$txtDate3.val(),4);n!=""&&t!=""&&i!=""?this.$txtDate.val(n+"/"+t+"/"+i):this.$txtDate.val("")};DateInput.prototype.SetDateValue=function(n){if(n!=null){const t=n.match(/(\d{2})\/(\d{2})\/(\d{4})/);if(t!=null&&t.length!=0){const i=t[1],r=t[2],u=t[3];this.$txtDate.val(n);this.$txtDate1.val(i);this.$txtDate2.val(r);this.$txtDate3.val(u)}}};DateInput.prototype.GetDateString=function(){return this.$txtDate.val()};DateInput.prototype.GetDateMoment=function(){return moment(this.GetDateString(),"MM-DD-YYYY")};DateInput.prototype.ValidateDate=function(n){n={isRequired:n.isRequired||!1,upperBoundYears:n.upperBoundYears||100,lowerBoundYears:n.lowerBoundYears||100,comparedToToday:n.comparedToToday||"any",afterDate:n.afterDate||"",afterDateDescription:n.afterDateDescription||"",beforeDate:n.beforeDate||"",beforeDateDescription:n.beforeDateDescription||""};const r=this.GetDateString(),u=Common.ValidateText(r),t=this.GetDateMoment();if(n.isRequired&&!u)return"This date is required";if(u){if(!Common.IsValidDate(r))return"This date is invalid";var i=moment();if(n.lowerBoundYears>0&&t.year()<i.year()-n.lowerBoundYears)return"This date is too old";if(n.upperBoundYears>0&&t.year()>i.year()+n.upperBoundYears)return"This date is too far in the future";if(n.comparedToToday=="after"&&t.isBefore(i))return"This date must be equal to or greater than current date";if(n.comparedToToday=="before"&&t.isAfter(i))return"This date must be equal to or less than current date";if(Common.ValidateText(n.afterDate)&&Common.IsValidDate(n.afterDate)&&t.isBefore(moment(n.afterDate,"MM-DD-YYYY")))return"This date must come after "+n.afterDateDescription;if(Common.ValidateText(n.beforeDate)&&Common.IsValidDate(n.beforeDate)&&!t.isBefore(moment(n.beforeDate,"MM-DD-YYYY")))return"This date must come before "+n.beforeDateDescription}};