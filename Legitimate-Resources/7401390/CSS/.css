<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Strict//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
  <head>
    <!-- Google Tag Manager -->
    <script>
      (function (w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != "dataLayer" ? "&l=" + l : "";
        j.async = true;
        j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl;
        f.parentNode.insertBefore(j, f);
      })(window, document, "script", "dataLayer", "GTM-N6W9VQH");
    </script>
    <!-- End Google Tag Manager -->

    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="robots" content="none" />
    <!-- IE -->
    <link rel="shortcut icon" type="image/x-icon" href="https://www.sonos.com/favicon.ico" />
    <!-- other browsers -->
    <link rel="icon" type="image/x-icon" href="https://www.sonos.com/favicon.ico" />

    <link rel="stylesheet" href="https://use.typekit.net/prs6khl.css" />

    <title>Sign in | Sonos</title>
    <!-- Core widget js and css -->
<script type="text/javascript"
        src="https://ok11static.oktacdn.com/assets/js/sdk/okta-signin-widget/5.9.4/js/okta-sign-in.min.js"></script>
<link rel="stylesheet"
      type="text/css"
      href="https://ok11static.oktacdn.com/assets/js/sdk/okta-signin-widget/5.9.4/css/okta-sign-in.min.css">

<!-- Customizable css theme options. Link your own stylesheet or override styles inline. -->
<link rel="stylesheet"
      type="text/css" href="">

<!-- styles for custom sign in -->
<link rel="stylesheet" type="text/css" href="https://ok11static.oktacdn.com/assets/loginpage/css/custom-signin.241e0fb439244dc50c5929c0513a6765.css">



    <link href="https://idassets.sonos.com/css/core.css" rel="stylesheet" />

    <script>
      window.updateObj = {};
      window.variantVars = {
        rememberme: false,
        reg: false,
        social: false,
      };
      window.lang = "en"; //default
    </script>
  </head>
  <body>
    <!-- Google Tag Manager (noscript) -->
    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-N6W9VQH" height="0" width="0" style="display: none; visibility: hidden"></iframe></noscript>
    <!-- End Google Tag Manager (noscript) -->

    <div id="backgroundDiv" class="login-bg-image" style="background-image: none"></div>

    <div id="sonosLogo" class="standalone-sonos-logo">SONOS</div>

    <div id="sonosHeader" class="sonos-header"></div>

    <div id="okta-login-container"></div>

    <div id="sonosFooter" class="sonos-footer"></div>

    <span class="sonos-checkmark-background">
      <i class="sonos-checkmark"></i>
    </span>
    <!--
        "OktaUtil" defines a global OktaUtil object
        that contains methods used to complete the Okta login flow.
     -->
    
<div id="okta-sign-in" class="auth-container main-container unsupported-message-container" style="display:none">
    <div id="unsupported-cookie" class="unsupported-message" style="display:none">
        <h2 class="o-form-head">Cookies are required</h2>
        <p>Cookies are disabled on your browser. Please enable Cookies and refresh this page.</p>
        <a class="button button-primary" target="_blank" href=".">
            Refresh
        </a>
    </div>
</div>

<script type="text/javascript" nonce="">
  var signInSuccessCallBackFunction;
  var oktaData = {"redirectUri":"https\x3A\x2F\x2Flogin.sonos.com\x2Foauth2\x2Fv1\x2Fauthorize\x2Fredirect\x3Fokta_key\x3DVQHoG0oQAZkezaM6gmRwiF2GfaMIoiEBcVad07viTWA","isMobileSso":false,"fromUri":"\x2Foauth2\x2Fv1\x2Fauthorize\x2Fredirect\x3Fokta_key\x3DVQHoG0oQAZkezaM6gmRwiF2GfaMIoiEBcVad07viTWA","isMobileClientLogin":false,"requestContext":{"target":{"clientId":"3f48e259\x2Da3d6\x2D4338\x2Da749\x2D45dda300bb7e","name":"oidc_client","links":{},"label":"3f48e259\x2Da3d6\x2D4338\x2Da749\x2D45dda300bb7e\x3ACLIENT_AUTH","type":{}},"authentication":{"request":{"scope":"openid\x20identity\x2Dread\x2Dbasic","response_type":"code","state":"eyJ2YXJpYW50TmFtZSI6Ind3dyIsImxhbmciOiJlbiIsIm5hdiI6InJlZ2lzdHJhdGlvbiJ9","redirect_uri":"https\x3A\x2F\x2Fwww.sonos.com\x2Flogin\x2Fcallback\x2F","response_mode":"query"},"protocol":{},"amr":[],"client":{"name":"3f48e259\x2Da3d6\x2D4338\x2Da749\x2D45dda300bb7e\x3ACLIENT_AUTH","links":{},"id":"3f48e259\x2Da3d6\x2D4338\x2Da749\x2D45dda300bb7e"},"issuer":{"name":"legacy\x2Dserver","id":"aus91jbc1Ay0rx8hv4x6","uri":"https\x3A\x2F\x2Flogin.sonos.com\x2Foauth2\x2Faus91jbc1Ay0rx8hv4x6"}}},"inactiveTab":{"elementId":"inactive\x2Dtab\x2Dmain\x2Ddiv","avoidPageRefresh":false,"enabled":false},"signIn":{"logoText":"sonosciam\x20logo","language":"en","consent":{"cancel":function(){window.location.href='https\x3A\x2F\x2Flogin.sonos.com\x2Flogin\x2Fstep\x2Dup\x2Fredirect\x3FstateToken\x3D00qo9wvfxmnuKhClpwZfc7pZpsQtoidQH7J8dNvChs';}},"i18n":{"en":{"mfa.challenge.password.placeholder":"Enter\x20your\x20password","help":"Help","password.forgot.email.or.username.tooltip":"Email\x20or\x20Username","needhelp":"Need\x20help\x20signing\x20in\x3F","primaryauth.username.placeholder":"Enter\x20your\x20email","password.forgot.email.or.username.placeholder":"Email\x20or\x20Username","account.unlock.email.or.username.tooltip":"Email\x20or\x20Username","unlockaccount":"Unlock\x20account\x3F","account.unlock.email.or.username.placeholder":"Email\x20or\x20Username","primaryauth.password.placeholder":"Enter\x20your\x20password","primaryauth.title":"Sign\x20In","forgotpassword":"Forgot\x20password\x3F"}},"relayState":"\x2Foauth2\x2Fv1\x2Fauthorize\x2Fredirect\x3Fokta_key\x3DVQHoG0oQAZkezaM6gmRwiF2GfaMIoiEBcVad07viTWA","features":{"emailRecovery":true,"restrictRedirectToForeground":true,"deviceFingerprinting":false,"consent":true,"useDeviceFingerprintForSecurityImage":true,"customExpiredPassword":true,"router":true,"showPasswordToggleOnSignInPage":false,"securityImage":false,"autoPush":true,"smsRecovery":false,"idpDiscovery":false,"selfServiceUnlock":true,"webauthn":true,"showPasswordRequirementsAsHtmlList":true,"registration":true,"rememberMe":true,"callRecovery":false,"multiOptionalFactorEnroll":true},"baseUrl":"https\x3A\x2F\x2Flogin.sonos.com","assets":{"baseUrl":"https\x3A\x2F\x2Fok11static.oktacdn.com\x2Fassets\x2Fjs\x2Fsdk\x2Fokta\x2Dsignin\x2Dwidget\x2F5.9.4"},"customButtons":[],"idpDiscovery":{"requestContext":"\x2Foauth2\x2Fv1\x2Fauthorize\x2Fredirect\x3Fokta_key\x3DVQHoG0oQAZkezaM6gmRwiF2GfaMIoiEBcVad07viTWA"},"logo":"https\x3A\x2F\x2Fok11static.oktacdn.com\x2Fassets\x2Fimg\x2Flogos\x2Fokta\x2Dlogo.1e146cad5713da744492be95eb0f7793.png","stateToken":"00qo9wvfxmnuKhClpwZfc7pZpsQtoidQH7J8dNvChs","helpLinks":{"help":"","forgotPassword":"","unlock":"","custom":[]},"piv":{}},"accountChooserDiscoveryUrl":"https\x3A\x2F\x2Flogin.okta.com\x2Fdiscovery\x2Fiframe.html"};

  var runLoginPage = function(fn) {
    var mainScript = document.createElement('script');
    mainScript.src = "https://ok11static.oktacdn.com/assets/js/mvc/loginpage/initLoginPage.pack.d05a8c2e6bdf6d212b92af4d6b9cfefe.js";
    document.getElementsByTagName('head')[0].appendChild(mainScript);
    fn && mainScript.addEventListener('load', function () { setTimeout(fn, 1) });
  };

  var OktaUtil = {
    _addClass: function(el, className) {
      if(el) {
        var elementClasses = el.className.split(" ");
        if (elementClasses.indexOf(className) == -1) {
          el.className += " " + className;
        }
      }
    },

    _removeElement: function(el) {
      if(el) {
        el.parentNode.removeChild(el);
      }
    },

    _hideElement: function(el) {
      if(el) {
        el.style.display = 'none';
      }
    },

    _isDocumentVisible: function() {
      return document.visibilityState === 'visible';
    },

    addLoginContainerClass: function () {
      this._addClass(document.getElementById('okta-login-container'), 'login-container');
    },

    showUnsupportedCookieWarning: function () {
      document.getElementById('okta-sign-in').removeAttribute('style');
      document.getElementById('unsupported-cookie').removeAttribute('style');
    },

    removeUnsupportedCookieWarning: function () {
      this._removeElement(document.getElementById('okta-sign-in'));
    },

    hideOktaLoginContainer: function () {
      this._hideElement(document.getElementById('okta-login-container'));
    },

    isChromeOs:  function () {
      return /\bCrOS\b/.test(navigator.userAgent);
    },

    addChromeOSScript: function() {
      var chromeOSScript = document.createElement('script');
      chromeOSScript.src = "/js/google/users-1.0.js";
      document.getElementsByTagName('head')[0].appendChild(chromeOSScript);
    },

    getSignInWidgetConfig: function () {
        if (oktaData.inactiveTab && oktaData.inactiveTab.enabled && !this._isDocumentVisible() && !oktaData.inactiveTab.avoidPageRefresh) {
            // Show a loading state and wait for the visibility event
            this.hideOktaLoginContainer();
            // remove stateToken so SIW does not attempt a login flow
            oktaData.signIn.stateToken = undefined;
        }
        return oktaData.signIn;
    },

    completeLogin: function (res) {
      signInSuccessCallBackFunction(res);
    },

    getRequestContext: function () {
      return oktaData.requestContext;
    },

    setRedirectUri: function (uri) {
      oktaData.redirectUri = uri;
    },

    init: function () {
      if (!navigator.cookieEnabled) {
        this.showUnsupportedCookieWarning();
        this.hideOktaLoginContainer();
      } else {
        this.removeUnsupportedCookieWarning();


        // add class if app login banner is present
        if (oktaData.isAppBannerVisible) {
          this.addLoginContainerClass();
        }

        oktaData.isCustomSignIn = true;
        oktaData.hasChromeOSFeature = this.isChromeOs();
        if (oktaData.hasChromeOSFeature) {
          this.addChromeOSScript();
        }
        runLoginPage(function () {
          var res = OktaLogin.initLoginPage(oktaData);
          oktaData.signIn = res.signIn;
          signInSuccessCallBackFunction = res.signInSuccessCallbackFn;

        });
      }
    }
  };
  OktaUtil.init();
  //# sourceURL=OktaUtil.js
</script>



    <script type="text/javascript">
      // "config" object contains default widget configuration
      // with any custom overrides defined in your admin settings.
      var config = OktaUtil.getSignInWidgetConfig();
      window.lang = config.language;
    </script>

    <script type="text/javascript" src="https://idassets.sonos.com/js/core.js"></script>
    <script type="text/javascript" src="https://idassets.sonos.com/js/signin.js"></script>

    <script type="text/javascript">
      if (typeof transformUsername !== "undefined") {
        window.updateObj.transformUsername = transformUsername;
      }

      window.updateObj.registration = {
        parseSchema: function (schema, onSuccess, onFailure) {
          onSuccess(schema);
        },
        preSubmit: function (postData, onSuccess, onFailure) {
          onOktaRegistrationPreSubmit(postData, onSuccess, onFailure);
        },
        postRegistrationSubmit: function (response, onSuccess, onFailure) {
          onSuccess(response);
        },
      };

      //base updateObj Settings
      window.updateObj["features"] = {
        emailRecovery: true,
        restrictRedirectToForeground: false,
        hideDefaultTip: true,
        deviceFingerprinting: true,
        consent: false,
        useDeviceFingerprintForSecurityImage: false,
        router: true,
        showPasswordToggleOnSignInPage: true,
        securityImage: false,
        autoPush: true,
        smsRecovery: false,
        idpDiscovery: false,
        selfServiceUnlock: false,
        webauthn: true,
        registration: window.variantVars.reg,
        rememberMe: window.variantVars.rememberme,
        callRecovery: false,
        multiOptionalFactorEnroll: true,
        windowsVerify: true,
      };

      const updatedConfig = Object.assign(config, window.updateObj);

      // Render the Okta Sign-In Widget
      var oktaSignIn = new OktaSignIn(updatedConfig);
      oktaSignIn.renderEl({ el: "#okta-login-container" }, OktaUtil.completeLogin, function (error) {
        // Logs errors that occur when configuring the widget.
        // Remove or replace this with your own custom error handler.
        console.log(error.message, error);
      });

      //HANDLERS
      // Handle a 'ready' event using an onReady callback
      oktaSignIn.on("ready", function (context) {
        if (typeof onOktaReady == "function") {
          onOktaReady(context);
        }
      });

      // AfterRender - gets called each time a controller changes AND on initial load
      oktaSignIn.on("afterRender", function (context) {
        if (typeof onOktaRender == "function") {
          onOktaRender(context);
        }
      });

      // afterError
      oktaSignIn.on("afterError", function (context, error) {
        if (typeof onOktaError == "function") {
          onOktaError(context, error);
        }
      });

      (function () {
        // disable animation on Sonos Pro
        if (document.body.classList.contains("sbiz")) {
          jQueryCourage.fx.off = true;
        }
      })();
    </script>
  </body>
</html>
