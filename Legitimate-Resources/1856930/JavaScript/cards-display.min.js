(function (VMJS, $) {

    var SKY_SPORTS = 'sky_sports',
        SKY_CINEMA = 'sky_cinema',
        VIRGIN_TV_ADDRESS = '/virgin-tv-edit',
        VIRGIN_TV_PATH_PREFIX = '/content/virginmedia/dotcom/en',
        VIRGIN_TV_PATH_SHORT_PREFIX = '/content/virginmedia',
        SEGMENT_HUB_REGEX = new RegExp('.*/sport$|.*/movies$|.*/tv$|.*/on-demand$|.*/tips-and-tricks$'),
        ARTICLE_PAGE_REGEX = new RegExp('.*/virgin-tv-edit/sport/+[^#?\\s]|.*/virgin-tv-edit/movies/+[^#?\\s]|.*/virgin-tv-edit/tv/+[^#?\\s]|.*/virgin-tv-edit/on-demand/+[^#?\\s]|.*/virgin-tv-edit/tips-and-tricks/+[^#?\\s]'), // jshint ignore:line
        PACKAGE_NAMES = ["player", "mix", "m_plus", "fun" ,"full_house"],
        PACKAGE_FULL_NAMES = ["Player", "Mix", "M+", "Fun" ,"Full House"],
        PACKAGE_NAMES_FROM_COOKIE = ["player", "mix", "m-plus", "fun" ,"full-house"],
        MILLIS_IN_YEAR = 365 * 24 * 60 * 60 * 1000;

    var safelyLoadHandlebarsPartial = function(element, options, cb) {
        var hbPartialsFunction = Handlebars.partials[element];
        if (hbPartialsFunction) {
            cb(hbPartialsFunction(options));
        } else {
            var _intervalCheck = setInterval(function (){
                if (hbPartialsFunction) {
                    clearInterval(_intervalCheck);
                    cb(hbPartialsFunction(options));
                }
            }, 100);
        }
    };

    var toggleError = function (show, $component) {
        $component.find('.validation')[show ? 'removeClass' : 'addClass']('hidden');
    };

    var initCardsCarousel = function ($container, cardsType) {
        var $owl = $container.find(".owl-carousel");

        $container.find('.owl-carousel').removeClass('row');
        $container.find('.' + cardsType + '-cards-item ')
            .removeClass('col-xs-12 col-sm-6 col-lg-4');

        $owl.owlCarousel({
                             margin: 30,
                             navText: false,
                             nav: false,
                             merge: true,
                             rewind: true,
                             responsive: {
                                 0: {
                                     items: 1,
                                     dots: true,
                                     dotsEach: true
                                 },
                                 768: {
                                     items: 2.4,
                                     dots: true,
                                     dotsEach: true
                                 },
                                 992: {
                                     items: 3,
                                     dots: false,
                                     dotsEach: false
                                 },
                                 1200: {
                                     items: 3,
                                     dots: false,
                                     dotsEach: false
                                 }
                             }
                         });
    };
    var registerClickEvent = function ($element) {
        var highlights = $element.find('.highlights');
        var topNavBar = $element.find('.top-nav-wrapper');
        $element.find('.navtab-subheading').off('click').on('click', function () {
            var $this = $(this),
                clickedItem = highlights.find('[data-item="' + $this.data('target') + '"]').removeClass('hidden'),
                notThis = $this.addClass('active').parent().children().not($this);
            notThis.removeClass('active');
            highlights.find('[data-item]').not(clickedItem).addClass('hidden');

            topNavBar.find('.top-navtab').removeClass('active');
            topNavBar.find('[data-item="top-' + $this.data('target') + '"]').addClass('active');

            setActiveBgColour($this, notThis);
        });
    };
    var registerSwipeEvent = function ($element) {
        var highlights = $element.find('.highlights');
        var topNavBar = $element.find('.top-nav-wrapper');
        var navWrapper = $element.find('.nav-wrapper');
        $element.find('.highlight-slides').swipe({
                                                     swipe: function (event, direction) {
                                                         var $this = $(this);
                                                         if (direction === 'right') {
                                                             if ($this.prev().length > 0) {
                                                                 var swipedRight = highlights.find('[data-item="' + $this.prev().data('item') + '"]');
                                                                 swipedRight.removeClass('hidden');
                                                                 highlights.find('[data-item]').not(swipedRight).addClass('hidden');
                                                                 topNavBar.find('[data-item="top-' + $this.prev().data('item') + '"]').addClass('active');
                                                                 topNavBar.find('[data-item="top-' + $this.data('item') + '"]').removeClass('active');

                                                                 var rightThis = navWrapper.find('[data-target="' + $this.prev().data('item') + '"]');
                                                                 rightThis.addClass('active');
                                                                 var rightNotThis = navWrapper.find('[data-target="' + $this.data('item') + '"]');
                                                                 rightNotThis.removeClass('active');
                                                                 setActiveBgColour(rightThis, rightNotThis);
                                                             } else {
                                                                 return false;
                                                             }
                                                         } else if(direction ==='left') {
                                                             if ($this.next().length > 0) {
                                                                 var swipedLeft = highlights.find('[data-item="' + $this.next().data('item') + '"]');
                                                                 swipedLeft.removeClass('hidden');
                                                                 highlights.find('[data-item]').not(swipedLeft).addClass('hidden');
                                                                 topNavBar.find('[data-item="top-' + $this.next().data('item') + '"]').addClass('active');
                                                                 topNavBar.find('[data-item="top-' + $this.data('item') + '"]').removeClass('active');

                                                                 var leftThis = navWrapper.find('[data-target="' + $this.prev().data('item') + '"]');
                                                                 leftThis.addClass('active');
                                                                 var leftNotThis = navWrapper.find('[data-target="' + $this.data('item') + '"]');
                                                                 leftNotThis.removeClass('active');
                                                                 setActiveBgColour(leftThis, leftNotThis);
                                                             } else {
                                                                 return false;
                                                             }
                                                         }
                                                     },
                                                     threshold: 75,
                                                     allowPageScroll: 'vertical'
                                                 });
    };

    var registerNewSlider = function ($element) {
        var HS_COMPONENT = $element;
        var HS_WRAPPER = HS_COMPONENT.querySelector('.highlights-slides-wrapper');
        if (!HS_WRAPPER) return;
        var autoLoopEnabled = true;
        var autoLoopTimer = null;
        var sliderClicked = false;
        var sliderSwiped = false;
        var ACTIVE_SLIDE_INDICATOR = HS_COMPONENT.querySelector('.active-slide-indicator');
        var hsManager = new Hammer.Manager(HS_WRAPPER);
        var SLIDES = HS_WRAPPER.querySelectorAll('.highlight-slides');
        var SLIDE_DETAILS = HS_WRAPPER.querySelectorAll('.highlight-container .details-container');
        var SLIDES_INDICATORS = HS_COMPONENT.querySelectorAll('.navtab-subheading');
        var ACTIVE_NAV = HS_COMPONENT.querySelector('.active-nav');
        var NUM_SLIDES = SLIDES.length;
        var ACTIVE_SLIDE = 0;
        var loopTracker = 1;
        var SLIDE_WIDTH = HS_COMPONENT.clientWidth;
        var SWIPE_START_POINT = null;

        HS_WRAPPER.style.width = 100 * NUM_SLIDES + '%';
        ACTIVE_NAV.style.width = 100 / NUM_SLIDES + '%';


        hsManager.add(new Hammer.Pan({
            threshold: 0,
            pointers: 0,
            direction: Hammer.DIRECTION_HORIZONTAL
        }));
        hsManager.on('pan', function (e) {
            var _percentage = 100 / NUM_SLIDES * e.deltaX / SLIDES[0].offsetWidth;
            var _transformPercentage = _percentage - 100 / NUM_SLIDES * ACTIVE_SLIDE;
            if (_transformPercentage > 0 || (_transformPercentage < (NUM_SLIDES - 1) * (-100 / NUM_SLIDES))) return;
            SWIPE_START_POINT = SWIPE_START_POINT || e.srcEvent.offsetX || e.srcEvent.touches[0].pageX - e.srcEvent.touches[0].target.offsetLeft;
            moveSlide(_transformPercentage);
            moveSliderIndicator(e.deltaX);
            moveSliderContent();
            if (e.isFinal) {
                if (validLeftToRightSwipe(e, SWIPE_START_POINT)) { // Swipe from left to right
                    snapToSlide(ACTIVE_SLIDE - 1);
                } else if (validRightToLeftSwipe(e, SWIPE_START_POINT)) { // swipe from right to left
                    snapToSlide(ACTIVE_SLIDE + 1);
                } else { // snap back to current slide
                    snapToSlide(ACTIVE_SLIDE);
                }
                sliderSwiped = true;
                clearTimeout(autoLoopTimer);
                snapSliderIndicator();
                SWIPE_START_POINT = null;
            }
        });

        var validLeftToRightSwipe = function (e, start) {
            return e.offsetDirection === 4 && isSwipeLengthValid(start, e.deltaX)
        };

        var validRightToLeftSwipe = function (e, start) {
            return e.offsetDirection === 2 && isSwipeLengthValid(start, e.deltaX)
        };

        var getClickedSide = function(point) {
            return point < SLIDE_WIDTH / 2 ? -1 : 1 // -1 for left, 1 for right
        };

        var isSwipeLengthValid = function(point, delta) {
            if (getClickedSide(point) === -1) {
                return point + delta > SLIDE_WIDTH / 2
            } else {
                return point + delta < SLIDE_WIDTH / 2
            }
        };

        var addEventListenerList = function (list, event, fn) {
            for (var i = 0, len = list.length; i < len; i++) {
                list[i].addEventListener(event, fn, false);
            }
        };

        addEventListenerList(SLIDES_INDICATORS, 'click', function (el) {
            var _slide = Number(el.target.dataset.slide);
            snapToSlide(_slide);
            sliderClicked = true;
            clearInterval(autoLoopTimer);
            snapSliderIndicator();
        });

        var moveSliderContent = function() {
            Array.prototype.forEach.call( SLIDES, function(slide, i){
                requestAnimationFrame(function () {
                    SLIDE_DETAILS[i].style.transform = getTranslateProperty($(slide).position().left * 0.1);
                })
            });
        };

        var snapToSlide = function(slide) {
            if (slide < 0) {
                ACTIVE_SLIDE = 0;
            } else if (slide > NUM_SLIDES - 1) {
                ACTIVE_SLIDE = NUM_SLIDES - 1
            } else {
                ACTIVE_SLIDE = slide;
            }
            var _percentage = -(100 / NUM_SLIDES) * ACTIVE_SLIDE;
            moveSlide(_percentage);
            setActiveSlide(SLIDES[ACTIVE_SLIDE]);
            moveSliderContent();
            setMobileIndicator();
        };

        var getTranslateProperty = function(value) {
            return 'translateX(' + value + '%)';
        };

        var setActiveSlide = function(slide) {
            SLIDES.forEach(function (slide) {
                slide.classList.remove('active-highlight');
            });
            slide.classList.add('active-highlight');
        };

        var moveSlide = function (value) {
            requestAnimationFrame(function () {
                HS_WRAPPER.style.transform = getTranslateProperty(value);
            })
        };

        var snapSliderIndicator = function (parms) {
          var value = ACTIVE_SLIDE * 100;
          requestAnimationFrame(function () {
              ACTIVE_SLIDE_INDICATOR.style.transform = getTranslateProperty(value);
          })
        };

        var moveSliderIndicator = function (value) {
            var delta = value / SLIDES[0].offsetWidth;
            var res = (ACTIVE_SLIDE * 100) + (delta * 100) * -1;
            requestAnimationFrame(function () {
                ACTIVE_SLIDE_INDICATOR.style.transform = getTranslateProperty(res);
            })
        };

        var setMobileIndicator = function () {
            $(".top-navtab").removeClass('active')
            $("div[data-item='top-highlight-" + ACTIVE_SLIDE + "']").addClass('active')
        };

        var startTimer = function () {
            clearInterval(autoLoopTimer);
            if (HS_COMPONENT.clientWidth < 768 || sliderClicked === true || sliderSwiped === true) return;
            autoLoopTimer = setInterval(function() {
                if (autoLoopEnabled === false) return;
                if (loopTracker === NUM_SLIDES)
                    loopTracker = 0;
                snapToSlide(loopTracker);
                snapSliderIndicator();
                ++loopTracker;
            }, 5000)
        };

        HS_WRAPPER.addEventListener("mouseover", function () {
            clearInterval(autoLoopTimer);
        }, false);
        HS_WRAPPER.addEventListener("mouseout", function () {
            startTimer();
        }, false);
        Array.prototype.forEach.call(SLIDES_INDICATORS, function(indicator, i) {
            indicator.addEventListener("click", function () {
                sliderClicked = true;
                clearInterval(autoLoopTimer);
            }, false)
        });

        setMobileIndicator();
        startTimer() // Start autoloop
    };

    var hexToRgba = function (hex, opacity) {
        if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
            var color = hex.substring(1).split('');
            if (color.length === 3) {
                color = [color[0], color[0], color[1], color[1], color[2], color[2]];
            }
            color = '0x' + color.join('');
            return 'rgba(' + [(color >> 16) & 255, (color >> 8) & 255, color & 255].join(',') + ', ' + opacity + ')';
        }
    };

    var transformCookiePackageName = function(packageName){
        if (packageName && packageName.length > 0) {
            packageName = packageName.trim();
            Object.keys(PACKAGE_NAMES_FROM_COOKIE).forEach(function (index) {
                if (PACKAGE_NAMES_FROM_COOKIE[index] === packageName) {
                    packageName = PACKAGE_NAMES[index];
                    return false;
                }
            });
        }
        return packageName;
    };

    var cookieToObject = function(cookieName){
        var cookieString = $.cookie(cookieName),
            package = null,
            skySports = '',
            skyMovies = '';

        if(cookieString){
            cookieString.split('|').forEach(function (item) {
                var index = item.indexOf('=');
                if (index == -1) {
                    return;
                }

                var key = item.substring(0, index);
                if (key === 'package') {
                    package = item.substring(index + 1);
                } else if (key === 'ss') {
                    skySports = item.substring(index+1);
                } else if (key === 'sk') {
                    skyMovies = item.substring(index+1);
                }
            });
        }

        return {
            'package' : transformCookiePackageName(package),
            'ss': skySports,
            'sk': skyMovies
        };
    };

    var hasPremiums = function(card, customerInfo){
        if(!card.premiums){
            return false;
        }
        else {
            return Boolean((customerInfo.sk === '1' && card.premiums[SKY_CINEMA] === true) ||
                (customerInfo.ss === '1' && card.premiums[SKY_SPORTS] === true));
        }
    };

    var hasPackage = function(card, customerInfo){
        return Boolean(card.packages && card.packages[customerInfo.package] === true);
    };

    var cardIsPremium = function(card) {
        return Boolean(card.premiums && (card.premiums[SKY_CINEMA] === true || card.premiums[SKY_SPORTS] === true));
    };

    var renderCards = function (componentData) {
            var cards = componentData.cards,
                $component = $('#' + componentData.componentId);

            cards.forEach(function(card) {
                if (!$component.data('wcmmode') && card.articleCardCTA &&
                    card.articleCardCTA.url &&
                    card.articleCardCTA.url.indexOf(VIRGIN_TV_PATH_PREFIX) > -1) {
                    card.articleCardCTA.url = card.articleCardCTA.url.split(VIRGIN_TV_PATH_PREFIX)[1];
                }
            });

            if (cards.length < $component.data('limit') && $component.data("wcmmode") === false) {
                $component.find(".load-more").hide();
            }

            if (!cards.length) {
                toggleError(!cards.length, $component);
                return;
            }

            var cardsType = $component.data("cards-type"),
                displayMode = $component.data("display-mode"),
                $container = $component.find('.' + cardsType + '-cards-display');

            if(cardsType === "calendar"){
                var customerInfo = cookieToObject("vmez");

                if (customerInfo && customerInfo.package) {
                    cards.forEach(function (card) {
                        if (cardIsPremium(card) && !hasPremiums(card, customerInfo) ||
                            !cardIsPremium(card) && !hasPackage(card, customerInfo)) {
                            //upgrade my package
                            card.includeGetTVCTA = false;
                            card.includeDemandCTA = false;
                            card.includeRecordCTA = false;
                            card.includeUpgradeCTA = true;
                        }

                        if (card.tvTierHD &&
                            PACKAGE_NAMES.indexOf(customerInfo.package) >=
                            PACKAGE_FULL_NAMES.indexOf(card.tvTierHD)) {
                            card.showChannel = card.showChannelHD;
                            card.channelNumber = card.channelNumberHD;
                            card.channelIconPath = card.channelIconPathHD;
                            card.tvTier = card.tvTierHD;
                        }

                        if (!card.recordLink) {
                            card.includeRecordCTA = false;
                        }
                    });
                }
                else {
                    cards.forEach(function (card) {
                        card.includeGetTVCTA = true;
                        card.includeRecordCTA = true;

                        if (!card.recordLink) {
                            card.includeRecordCTA = false;
                        }
                    });
                }
            }
            safelyLoadHandlebarsPartial(cardsType + '-cards', cards, function(template) {
                $container.find("." + cardsType + "-cards").append(template);
                if (displayMode === 'carousel' && $(window).width() < 992) {
                    initCardsCarousel($container, cardsType);
                } else {
                    $container.find('.owl-carousel').removeClass('owl-carousel').addClass('row');
                    $container.find('.' + cardsType + '-cards-item ')
                        .addClass('col-lg-4 col-sm-6 col-xs-12');
                }
            });
        },

        renderBanner = function (componentData) {
            var banner = componentData.bannerCard,
                $component = $('#' + componentData.componentId),
                tipsAndTricksUrl = $component.data('tips-and-tricks-url'),
                tagTipsTricks = ($component.data('category-of-article')
                                 === 'Entertainment:TipsTricks'),
                tagCustomerExclusive = ($component.data('category-of-article')
                                        === 'Entertainment:CustomerExclusive');
            if (!$component.data('wcmmode')) {
                if (banner.currentArticlePath) {
                    if (banner.currentArticlePath.indexOf(VIRGIN_TV_PATH_PREFIX) > -1) {
                        banner.currentArticlePath = banner.currentArticlePath.split(VIRGIN_TV_PATH_PREFIX)[1];
                    } else if (banner.currentArticlePath.indexOf(VIRGIN_TV_PATH_SHORT_PREFIX) > -1) {
                        banner.currentArticlePath = banner.currentArticlePath.split(VIRGIN_TV_PATH_SHORT_PREFIX)[1];
                    }
                }
                if (tipsAndTricksUrl) {
                    if (tipsAndTricksUrl.indexOf(VIRGIN_TV_PATH_PREFIX) > -1) {
                        tipsAndTricksUrl = tipsAndTricksUrl.split(VIRGIN_TV_PATH_PREFIX)[1];
                    } else if (tipsAndTricksUrl.indexOf(VIRGIN_TV_PATH_SHORT_PREFIX) > -1) {
                        tipsAndTricksUrl = tipsAndTricksUrl.split(VIRGIN_TV_PATH_SHORT_PREFIX)[1];
                    }
                }
            }
            safelyLoadHandlebarsPartial('banner-cards', {
                tagTipsTricks: tagTipsTricks,
                tagCustomerExclusive: tagCustomerExclusive,
                tipsAndTricksUrl: tipsAndTricksUrl,
                article: banner
            }, function(template) {
                if ($component.hasClass('loading')) {
                    $component.removeClass('loading');
                    $component.html(template);
                } else {
                    $component.append(template);
                }
            });
        },

        renderHighlight = function (componentData) {
            var highlights = componentData.highlightCard,
                $component = $('#' + componentData.componentId);

            highlights.forEach(function(highlight) {
                if (!$component.data('wcmmode') && highlight.highlightFeatureCTA &&
                    highlight.highlightFeatureCTA.url &&
                    highlight.highlightFeatureCTA.url.indexOf(VIRGIN_TV_PATH_PREFIX) > -1) {
                    highlight.highlightFeatureCTA.url = highlight.highlightFeatureCTA.url.split(VIRGIN_TV_PATH_PREFIX)[1];
                }
            });
            safelyLoadHandlebarsPartial('highlights-cards', {
                hasHighLights: highlights.length>0,
                highlights: highlights,
                wcmmodeEedit: $component.data('wcmmode'),
                isDisplay: true
            }, function(template) {
                if ($component.hasClass('loading')) {
                    $component.removeClass('loading');
                    $component.html(template);
                } else {
                    $component.append(template);
                }
                // registerClickEvent($component);
                // registerSwipeEvent($component);
                new registerNewSlider($component[0]);
                //registerAutoLoop($component);
                //setActiveBgColour($component.find('.navtab-subheading.active'));
            });
        };

    var loadCards = function (cards) {
        var components = cards[0],
            siteName = $(components).data("node-path").split('/')[2],
            cardsUrl = '/services/api/allCards',
            address = document.location.href,
            queryString =   '?s_n=' + siteName +
                            '&l_t=reload';

            if (isArticlePage() && address && address.indexOf(VIRGIN_TV_ADDRESS) > -1) {
                queryString += '&a_p=' + VIRGIN_TV_ADDRESS + address.split(VIRGIN_TV_ADDRESS)[1].split('.html')[0];
            }

        cards.forEach(function (item) {
            var $component = $(item);

            if ($component.hasClass('highlights-wrapper')) {
                var segment = $component.data("segment"),
                    id = $component.data('unique-id');
                $component.attr('id', id);
                queryString = queryString + '&highlight_p_f_' + id + '=' + $component.data("filter-by-package");

                if (segment && segment.length > 0) {
                    queryString += '&highlight_s_' + id + '=' + segment;
                }
            }

            if ($component.hasClass('banner-card-display-container')) {
                var category = $component.data('category-of-article'),
                    id = $component.data('unique-id');
                /*if component is blank, skip it*/
                if (category) {
                    $component.attr('id', id);
                    queryString = queryString +   '&banner_c_' + id + '=' + category +
                        '&banner_p_f_' + id + '=' + $component.data("filter-by-package");
                }
            }

            if ($component.hasClass('cards-display-container')) {
                var cardsType = $component.data("cards-type"),
                    tagsFilter = $component.data("filter-by-tags"),
                    variant= $component.data("variant"),
                    segment = $component.data("segment"),
                    loadMore = $component.data("load-more"),
                    id = $component.attr('id');
                queryString +=  '&'+cardsType+'_l_' + id + '=' + $component.data("limit") +
                    '&'+cardsType+'_p_' + id + '=' + $component.data("use-premiums") +
                    '&'+cardsType+'_p_f_' + id + '=' + $component.data("filter-by-package");

                if (tagsFilter && tagsFilter.length > 0) {
                    queryString += '&'+cardsType+'_t_f_' + id + '=' + tagsFilter;
                }
                if (variant && variant.length > 0) {
                    queryString += '&'+cardsType+'_v_' + id + '=' + variant;
                }
                if (segment && segment.length > 0) {
                    queryString += '&'+cardsType+'_s_' + id + '=' + segment;
                }
                if (loadMore) {
                    queryString += '&'+cardsType+'_l_m_' + id + '=' + loadMore;
                }
            }
        });

        extendCookieWithCards();

        common.AsyncService.ajaxPromise({
                                            url: cardsUrl + queryString,
                                            method: 'GET',
                                            dataType: 'json'
                                        })
            .then(function (allCards) {
                handleCookieValue(allCards);
                allCards.items.forEach(function (component) {
                    if (component.cards) {
                        renderCards(component);
                    }
                    if (component.bannerCard) {
                        renderBanner(component);
                    }
                    if (component.highlightCard) {
                        renderHighlight(component);
                    }
                });

                for (var componentId in allCards.loadMoreFlags) {
                    toggleLoadMoreCTA($('#' + componentId), Boolean(allCards.loadMoreFlags[componentId]));
                }

                if (isHomeOrSegmentHubPage()) {
                    keepCookieForArticleCards();
                }
            })
            .fail(function () {
                $.find('.cards-display-container').forEach(function (item) {
                    var $component = $(item);
                    toggleError(true, $component);
                    toggleLoadMoreCTA($component, $component.data("wcmmode") === false);
                });
            });
    };

    var toggleLoadMoreCTA = function ($component, isLoadMoreDisplayed) {
        $component.find(".load-more").toggle(isLoadMoreDisplayed);
    };

    var extendCookieWithCards = function () {
        if (VMJS.Cache.vmp.cards) {
            var cookieContent = readCookie();
            if (cookieContent.length > 0) {
                cookieContent += "|";
            }
            cookieContent += 'cards=' + VMJS.Cache.vmp.cards;

            createCookie(cookieContent);
        }
    };

    var handleCookieValue = function(cardsHolder) {
        var cookieContent = readCookie();
        var cardsIndex = cookieContent.indexOf('cards=');
        if (cardsIndex > -1) {
            cookieContent = cookieContent.substring(0, cardsIndex);
            if(cookieContent.slice(-1) === '|') {
                cookieContent = cookieContent.slice(0, -1);
            }

            createCookie(cookieContent);
        }

        if (cardsHolder && cardsHolder.cards && !isArticlePage()) {
            VMJS.Cache.vmp.cards = cardsHolder.cards;
        }
    };

    var isArticlePage = function() {
            var address = document.location.href.split('.html')[0].split('?')[0];
            return ARTICLE_PAGE_REGEX.test(address);
    };

    var isHomeOrSegmentHubPage = function() {
        if (isArticlePage()) {
            return false;
        }

        var address = document.location.href.split('.html')[0].split('?')[0];
        if(address.slice(-1) === '/') {
            address = address.slice(0, -1);
        }

        if (isHomePage(address)) {
            return true;
        }

        //check is it segment hub page
        return SEGMENT_HUB_REGEX.test(address);
    };

    var isHomePage = function(address) {
        var addressParts = address.split(VIRGIN_TV_ADDRESS);
        return Boolean(addressParts.length === 1 || addressParts[1].length === 0);
    };

    var keepCookieForArticleCards = function() {
        if (!VMJS.Cache.vmp.cards) {
            return;
        }

        $('div.article-card-cta a, div.banner-card-cta a, div.highlight-feature-cta a').each(function(index, item) {
            $(item).on('click', function (e) {
                if (!VMJS.Cache.vmp.cards) {
                    return;
                }

                var cookieContent = readCookie();
                if (cookieContent.length > 0) {
                    cookieContent += '|';
                }
                if (cookieContent.indexOf('cards=') === -1) {
                    cookieContent += 'cards=' + VMJS.Cache.vmp.cards;
                }
                if (cookieContent.indexOf('keepContent=true') === -1) {
                    cookieContent += '|keepContent=true';
                }

                createCookie(cookieContent);
            });
        });
    };

    var createCookie =function(value) {
        var date = new Date();
        date.setTime(date.getTime() + MILLIS_IN_YEAR);
        var expires = "; expires=" + date.toGMTString();

        document.cookie = encodeURIComponent('vmez') + "=" + value + expires + "; path=/";
    };

    var readCookie =function() {
        var name = "vmez=";
        var decodedCookie = decodeURIComponent(document.cookie);
        var ca = decodedCookie.split(';');
        for(var i = 0; i <ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) === ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) === 0) {
                return c.substring(name.length, c.length);
            }
        }
        return "";
    };

    function appendDiagonalLineToArticle() {
        var contentElement = $('.scrolled-content');
        var whiteLineDiagonal = $('.white-line-diagonal');
        if (contentElement) {
            contentElement.append(whiteLineDiagonal);
        }
    }

    var init = function () {
        var cards = $.find('.cards-display-container, .banner-card-display-container, .highlights-wrapper');
        if (cards) {
            loadCards(cards);
            appendDiagonalLineToArticle();
        }
    };

    // NodeList forEach polyfill
    if (window.NodeList && !NodeList.prototype.forEach) {
        NodeList.prototype.forEach = function (callback, thisArg) {
            thisArg = thisArg || window;
            for (var i = 0; i < this.length; i++) {
                callback.call(thisArg, this[i], i, this);
            }
        };
    }

    window.addEventListener('load', init, false);
})(VMJS, jQuery);
