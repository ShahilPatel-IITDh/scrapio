"use strict";var dla=window.dla||{};class ProductSearchDataManager{constructor(t,e,a){this._expirationTime=e,this._languageTag=a,this._apiEndPoint=t,this.inited=!1,this.productData={},this.productData.searchHistory={}}init(){this.inited=!0,this.getCachedData()}getCachedData(){if(window.localStorage&&null!==window.localStorage.getItem("productSearch")){const t=JSON.parse(window.localStorage.getItem("productSearch"));if(this.checkScope(t))return void(this.productData=t)}return this.getApiData().then(t=>{this.processApiResponse(t)})}getProductData(t){return new Promise(e=>{this.checkScope(this.productData)?e(this.productData):this.getApiData(t).then(t=>{e(this.processApiResponse(t))})})}checkScope(t){return!(void 0===t.scope||t.scope.scopeDate<Date.now()||t.scope.languageTag!==this._languageTag||t.scope.playerId!==dla.resources.playerNr)}getApiData(t=null){return jsf.ajax.get(this._apiEndPoint,{type:"GET",dataType:"json",contentType:"application/json",cache:!1,headers:{"x-api-key":dla.resources.apiKey},error:()=>{null!==t&&t()},success:()=>{},beforeSend:()=>{}})}processApiResponse(t){if(this.getLengthJson(t)>0)return t.scope.scopeDate=Date.now()+this._expirationTime,this.cacheApiData(t)}cacheApiData(t){return this.flushData(),t.searchHistory={},window.localStorage.setItem("productSearch",JSON.stringify(t)),this.productData=t,this.productData}flushData(){this.productData={},window.localStorage.removeItem("productSearch")}getLengthJson(t){return Object.keys(t).length}saveSearchHistory(t,e){this.productData.searchHistory[e]=t}}$(window).trigger("available","productSearchDataManager");